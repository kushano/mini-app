{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\nodejstest1\\\\mini-app\\\\src\\\\components\\\\ChatComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { ScreenSpinner, CardGrid, ContentCard, Input, Button, FixedLayout, Panel, PanelHeader, PanelHeaderBack, Spacing } from '@vkontakte/vkui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatComp() {\n  _s();\n\n  const messagesEndRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    key: 1,\n    sender_name: 'sss',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 2,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 3,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 4,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 5,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 6,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 7,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 8,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 9,\n    sender_name: 'Lev',\n    text: 'Я щас вымок весь под дождём('\n  }, {\n    key: 10,\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }]);\n  const [msgs, setMsgs] = useState(''); //\n\n  const [scheme, setScheme] = useState('bright_light');\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState( /*#__PURE__*/_jsxDEV(ScreenSpinner, {\n    size: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 39\n  }, this)); //\n\n  useEffect(() => {\n    bridge.subscribe(_ref => {\n      let {\n        detail: {\n          type,\n          data\n        }\n      } = _ref;\n\n      if (type === 'VKWebAppUpdateConfig') {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n\n    fetchData();\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  const messagesList = Object.keys(messages).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardGrid, {\n      size: \"l\",\n      children: /*#__PURE__*/_jsxDEV(ContentCard, {\n        subtitle: messages[message].sender_name,\n        mode: \"outline\",\n        text: messages[message].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, message.toString(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) // <MessageComp key={message} id={message.id} sender_name={message.sender_name} text={message.text}/>\n  );\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const newMsg = {\n      id: Date.now(),\n      sender_name: 'wlsdw',\n      text: msgs\n    };\n\n    if (msgs.length > 0 & msgs != \" \") {\n      setMessages([...messages, newMsg]);\n      setMsgs('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      children: messagesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 38\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedLayout, {\n      filled: true,\n      vertical: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MessageBox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: msgs,\n            onChange: e => setMsgs(e.target.value),\n            placeholder: \"Type message to send\",\n            after: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: sendMessage,\n              size: \"l\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatComp, \"8psCAxnLHiR4wYHWAHOxAaqJ7h8=\");\n\n_c = ChatComp;\nexport default ChatComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatComp\");","map":{"version":3,"sources":["D:/CodingProjects/nodejstest1/mini-app/src/components/ChatComp.js"],"names":["React","useState","useRef","useEffect","bridge","ScreenSpinner","CardGrid","ContentCard","Input","Button","FixedLayout","Panel","PanelHeader","PanelHeaderBack","Spacing","ChatComp","messagesEndRef","messages","setMessages","key","sender_name","text","msgs","setMsgs","scheme","setScheme","fetchedUser","setUser","popout","setPopout","subscribe","detail","type","data","fetchData","user","send","scrollToBottom","current","scrollIntoView","behavior","messagesList","Object","keys","map","message","toString","sendMessage","e","preventDefault","newMsg","id","Date","now","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { ScreenSpinner, CardGrid, ContentCard, Input, Button, FixedLayout, Panel, PanelHeader, PanelHeaderBack, Spacing } from '@vkontakte/vkui';\r\n\r\nfunction ChatComp() {\r\n    const messagesEndRef = useRef(null)\r\n    const [messages, setMessages] = useState([\r\n        { key: 1, sender_name: 'sss', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 2, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 3, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 4, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 5, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 6, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 7, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 8, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 9, sender_name: 'Lev', text: 'Я щас вымок весь под дождём(' },\r\n        { key: 10, sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' }\r\n    ])\r\n    const [msgs, setMsgs] = useState('')\r\n    //\r\n    const [scheme, setScheme] = useState('bright_light')\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n    //\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(scrollToBottom, [messages]);\r\n\r\n    const messagesList = Object.keys(messages).map((message) =>\r\n        <div key={message.toString()}>\r\n            <CardGrid size=\"l\">\r\n                <ContentCard\r\n                    subtitle={messages[message].sender_name}\r\n                    mode=\"outline\"\r\n                    text={messages[message].text} />\r\n            </CardGrid>\r\n            <Spacing></Spacing>\r\n            <div ref={messagesEndRef}></div>\r\n        </div>\r\n        // <MessageComp key={message} id={message.id} sender_name={message.sender_name} text={message.text}/>\r\n    )\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        const newMsg = {\r\n            id: Date.now(),\r\n            sender_name: 'wlsdw',\r\n            text: msgs\r\n        }\r\n        if (msgs.length > 0 & msgs != \" \") {\r\n            setMessages([...messages, newMsg])\r\n            setMsgs('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Panel>\r\n                {messagesList}\r\n            </Panel>\r\n\r\n            <Spacing size={38} />\r\n\r\n            <FixedLayout filled vertical='bottom'>\r\n                <section className=\"MessageBox\">\r\n                    <form>\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={msgs}\r\n                            onChange={e => setMsgs(e.target.value)}\r\n                            placeholder=\"Type message to send\"\r\n                            after={\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    onClick={sendMessage}\r\n                                    size=\"l\"\r\n                                >\r\n                                    Send\r\n                                </Button>\r\n                            }\r\n                        />\r\n                    </form>\r\n                </section>\r\n            </FixedLayout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatComp;"]},"metadata":{},"sourceType":"module"}