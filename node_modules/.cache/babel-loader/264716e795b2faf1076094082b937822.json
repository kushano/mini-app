{"ast":null,"code":"var _jsxFileName = \"D:\\\\CodingProjects\\\\nodejstest1\\\\mini-app\\\\src\\\\components\\\\ChatComp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Avatar, ScreenSpinner, CardGrid, ContentCard, Input, Button, FixedLayout, Panel, PanelHeader, PanelHeaderBack, Spacing, FormLayoutGroup } from '@vkontakte/vkui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatComp(props) {\n  _s();\n\n  const messagesEndRef = useRef(null);\n  const [messages, setMessages] = useState([{\n    key: 1,\n    src: '',\n    sender_name: 'sss',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 2,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 3,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 4,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 5,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 6,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 7,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 8,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }, {\n    key: 9,\n    src: '',\n    sender_name: 'Lev',\n    text: 'Я щас вымок весь под дождём('\n  }, {\n    key: 10,\n    src: '',\n    sender_name: 'Vladislav',\n    text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути'\n  }]);\n  const [msgs, setMsgs] = useState('');\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  const messagesList = Object.keys(messages).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormLayoutGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: messages[message].src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContentCard // src={messages[message].src}\n      , {\n        subtitle: messages[message].sender_name,\n        mode: \"outline\",\n        text: messages[message].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, message.toString(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this) // <MessageComp key={message} id={message.id} sender_name={message.sender_name} text={message.text}/>\n  );\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const newMsg = {\n      id: Date.now(),\n      src: props.photo_100,\n      sender_name: props.first_name + ' ' + props.last_name,\n      text: msgs\n    };\n\n    if (msgs.length > 0 & msgs != \" \") {\n      setMessages([...messages, newMsg]);\n      setMsgs('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      children: messagesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Spacing, {\n      size: 38\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FixedLayout, {\n      filled: true,\n      vertical: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"MessageBox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: msgs,\n            onChange: e => setMsgs(e.target.value),\n            placeholder: \"Type message to send\",\n            after: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: sendMessage,\n              size: \"l\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatComp, \"9Q0IRq9pqMcoCc43yH7VzL+DN2M=\");\n\n_c = ChatComp;\nexport default ChatComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatComp\");","map":{"version":3,"sources":["D:/CodingProjects/nodejstest1/mini-app/src/components/ChatComp.js"],"names":["React","useState","useRef","useEffect","bridge","Avatar","ScreenSpinner","CardGrid","ContentCard","Input","Button","FixedLayout","Panel","PanelHeader","PanelHeaderBack","Spacing","FormLayoutGroup","ChatComp","props","messagesEndRef","messages","setMessages","key","src","sender_name","text","msgs","setMsgs","scrollToBottom","current","scrollIntoView","behavior","messagesList","Object","keys","map","message","toString","sendMessage","e","preventDefault","newMsg","id","Date","now","photo_100","first_name","last_name","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Avatar, ScreenSpinner, CardGrid, ContentCard, Input, Button, FixedLayout, Panel, PanelHeader, PanelHeaderBack, Spacing, FormLayoutGroup } from '@vkontakte/vkui';\r\n\r\nfunction ChatComp(props) {\r\n    const messagesEndRef = useRef(null)\r\n    const [messages, setMessages] = useState([\r\n        { key: 1, src: '', sender_name: 'sss', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 2, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 3, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 4, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 5, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 6, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 7, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 8, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' },\r\n        { key: 9, src: '', sender_name: 'Lev', text: 'Я щас вымок весь под дождём(' },\r\n        { key: 10, src: '', sender_name: 'Vladislav', text: 'ой, блять заебался, сделал коммит, он не сделался, сделал сейчас хуйни, рестор только к началу, по сути' }\r\n    ])\r\n    const [msgs, setMsgs] = useState('')\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    useEffect(scrollToBottom, [messages]);\r\n\r\n    const messagesList = Object.keys(messages).map((message) =>\r\n        <div key={message.toString()}>\r\n            <FormLayoutGroup>\r\n                <Avatar src={messages[message].src}></Avatar>\r\n                <Spacing></Spacing>\r\n                <ContentCard\r\n                    // src={messages[message].src}\r\n                    subtitle={messages[message].sender_name}\r\n                    mode=\"outline\"\r\n                    text={messages[message].text} />\r\n                    <Spacing></Spacing>\r\n            </FormLayoutGroup>\r\n            <Spacing></Spacing>\r\n            <div ref={messagesEndRef}></div>\r\n        </div>\r\n        // <MessageComp key={message} id={message.id} sender_name={message.sender_name} text={message.text}/>\r\n    )\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        const newMsg = {\r\n            id: Date.now(),\r\n            src: props.photo_100,\r\n            sender_name: props.first_name + ' ' + props.last_name,\r\n            text: msgs\r\n        }\r\n        if (msgs.length > 0 & msgs != \" \") {\r\n            setMessages([...messages, newMsg])\r\n            setMsgs('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Panel>\r\n                {messagesList}\r\n            </Panel>\r\n\r\n            <Spacing size={38} />\r\n\r\n            <FixedLayout filled vertical='bottom'>\r\n                <section className=\"MessageBox\">\r\n                    <form>\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={msgs}\r\n                            onChange={e => setMsgs(e.target.value)}\r\n                            placeholder=\"Type message to send\"\r\n                            after={\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    onClick={sendMessage}\r\n                                    size=\"l\"\r\n                                >\r\n                                    Send\r\n                                </Button>\r\n                            }\r\n                        />\r\n                    </form>\r\n                </section>\r\n            </FixedLayout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatComp;"]},"metadata":{},"sourceType":"module"}